ACHTUNG: dwukierunkwość chciał komando (inna ścieżka od Mietka do Zenka i z powrotem może być), 
﻿chciał też wielu połączeń między użytkownikami
﻿
﻿warto skopiować pomysł od niektórych grup z podglądam tablicy mapowań w węzłach - albo z Nodixa, albo Managerix odpytuje
﻿przez Agentixa i drukuje do loga
﻿
﻿
﻿
﻿PROTOKÓŁ KOMUNIKACJI

nazwy:
	LRM - Link Resource Manager
	RC - Routing Controller			jego adres to zawsze numerSieci.numerPodsieci.0 //Routix?
	CC - Connection Controller		jego adres to zawsze numerSieci.numerPodsieci.1
	NCC - Network Call Controller		//dla tego rodzynka można dać numersieci = 0 na przykład, wtedy chmura też ogarnie
	POL - Policy
	DIR - Directory

logowanie do chmury:

	CLIENT - CLOUD : SPacket(myAddr, new Address(0.0.0), "HELLO") <- jak chmura zobaczy że adres destination to "cloud" to wie że to o nią chodzi

komunikacja przez chmurę: //zrobiłem już klasę do tego SPacket

	SPacket (string sender, string destination, List<string> argumenty)

przestrzeń adresowa:

	numerSieci.numerPodsieci.numerHosta

zakładając jedną sieć i kilka podsieci adresy wyglądałyby w stylu 1.5.7 itp, trochę jak adresy IP
RC i CC wiedziałyby której podsieci odpowiadają

komunikacja między LRM:
//chmury kablowej nie ruszamy, czyli trzeba użyć tej samej klasy serializowanej tylko vp,vc dać -1 i w payload 
//dać wiadomość w formacie np. <nazwa wysyłającego/jego adres> <nr portu wyjściowego> , musi być info o porcie!!!

poprzez chmurę kablową wysyłanie wiadomości na VPI=0 VCI = 0 -1 treści "mojAdres" //patrz wyżej, nie sam adres
po np 5 sekundach LRM zakłada że zna wszystkich sąsiadów. Wie którzy z nich są w innych podsieciach (na podstawie adresów)
	z tym timerem 5 sekund to czuję że zabawa będzie

komunikacja RC - RC
	po wciśnięciu przycisku "ustal topologię" w Routixie wysyła on do wszystkich sąsiednich podsieci informację o pozostałych osiągalnych podsieciach, po czym ustala zmięnną bool na 5 sekund i nie wysyła więcej informacji przez ten czas
	RC1 -> RC2 : TOPOLOGY 2 3 4
		 w skrócie - RC podsieci 2 dowie się, że przez podsieć 1 jest w stanie dotrzeć do podsieci 3 i 4 (to 2 zignoruje bo będzie dotyczyć niego samego, wygodniej mi to będzie zaimplementować)
	żeby nie klikać tego przycisku we wszystkich RC każdy po otrzymaniu takiej wiadomości rozsyła otrzyma informację do wszystkich sąsiadów
	DLATEGO jest ten blok na 5 sekund bo by sie zasrały tymi wiadomościami w nieskończonej pętli. Można bezpiecznie założyć że przez 5 sekund wszystkie zdążą wszystko wysłać
	RC wie z jakimi podsieciami graniczy dzięki localTopology pobranej od poszczególnych LRM

komunikacja LRM - RC

logowanie
	LRM -> RC : HELLO mojAdres //skąd brać te adresy? z konfiga wczytamy?
	RC -> LRM : jestJużTakiAdresWSieci ? ADDR_TAKEN : OK 
		chyba rozumiecie o co tu chodzi xd

pobranie listy podłączonych adresów (NA ŻĄDANIE RC)
	RC -> LRM : REQ_TOPOLOGY
	LRM -> RC : TOPOLOGY addr1 addr2 addr3... 
		wysyłanie w jednej linii adresów wszystkich sąsiadów, na podstawie tej wiadomości RC tworzy graf sieci
//przesyłamy tu także info nie tylko o dostępnych sąsiadach za pomocą łączą, ale też VP?

pytanie o wolne zasoby
	RC -> LRM : IS_LINK_AVAILIBLE SNP
		tutaj jest pytanie o to SNP, jak dokładnie zostanie ono opisane to zrobimy w przyszłości
		może to być pytanie o łącze między klientami albo o VPI, nie wiem
	LRM -> RC : czyWolne ? YES ADDR_DOCELOWY : NO ADDR_DOCELOWY 
	LRM musi odpowiadać o którym łączu mówi!
	RC zmienia lub nie graf sieci

komunikacja CC - RC

pytanie o ścieżkę
	CC -> RC : REQ_ROUTE addr1 addr2
	RC oblicza ścieżkę, pyta się LRM(ja bym pytał przed) po drodze czy jest dostępna, jeśli tak to ok jeśli nie to oblicza inną
	RC -> CC ROUTE addr1 addrPosredni1 addrPosredni2 addrPosredni3 addr2
	LRM -> CC : HELLO mójAdres
	CC -> LRM : ADD PORT VPI VCI PORT VPI VCI // ja bym zajmował zarówno w weźle startowym i końcowym zasoby, identyfikowanie po vpi vci port
	CC -> LRM : DEL PORT VPI VCI PORT VPI VCI
	CC -> CC : [Propozycja] ROUTE zdejmowany od początkowego elementu do końcowego.
	Np. RC zwraca ROUTE subnet1(addr1 addrPosredni1) subnet2(addrPosredni2) subnet3(addrPosredni3 addr2)
	CC1 patrzy na ROUTE i na początku jest jego podsieć więc wysyła do NODE addr1 i NODE addrPosredni1 mappingi)
	CC1 patrzy że następne polecenie jest dla subnet2 czyli CC2 ciśnie mu przez chmurę odessane ROUTE o obsluzone adresy
	CC2 otrzymuje subnet2(addrPosredni2) subnet3(addrPosredni3 addr2) itp itd...
	
	Co do LRM:
	-trzeba ustalić sposób w jakim każdy LRM ma przechowywać info o zajtości łącza i jego max przepustowości (ogarnąć też te VP?)
		patrz niżej - w tym pliku do każdego łącza można dać też przepustowość łąćza

	-musisz mi Radku jakoś udostępnić listę wszystkich interfejsów, abym mógł wszystkich zaspamować dookoła
		myślę że tutaj trzeba będzie to zrobić jako plik wczytywany podczas startu węzła. po zalogowaniu się do chmury sterowania poinformuje ją o swoich interfejsach. Taka propozycja moja


	-porponuje rozsyłanie wiadomosci o połączeniach między węzłami/klientami w postaci adres1 port1 adres 2 port 2
	gdzie z nr 1 jest startowy jakby (te z 2 będą dotyczyły tego, który wysyła całą ścieżkę do RC)
		jakich wiadomości o połączeniach między węzłami? sprecyzuj bo nie ogarniam xD


	- Radek udostepnij mi metodę żebym móg jakoś wypisywać z LRMa jakieś logi, komandos z chęcią zobaczy działanie LRMa
		SetText(String text) była, jest i będzie
	
